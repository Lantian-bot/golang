package pointer

// 1.题目 ：编写一个Go程序，定义一个函数，该函数接收一个整数指针作为参数，在函数内部将该指针指向的值增加10，然后在主函数中调用该函数并输出修改后的值。
// 考察点 ：指针的使用、值传递与引用传递的区别。
/*
	指针操作确保直接修改原始变量而非副本
	*运算符用于解引用指针，&运算符用于获取地址
	Go严格区分值类型和指针类型，这种设计能明确数据传递方式
*/

func Add(num *int) {
	*num += 10 // 通过指针直接修改原始值
}

// 2.题目 ：实现一个函数，接收一个整数切片的指针，将切片中的每个元素乘以2
// 考察点 ：指针运算、切片操作

func DoubleSlice(slicePtr *[]int) {
	// 通过指针解引用获取原始切片
	s := *slicePtr
	// 遍历切片索引，直接修改原始数据
	for i := range s {
		s[i] *= 2
	}
}
